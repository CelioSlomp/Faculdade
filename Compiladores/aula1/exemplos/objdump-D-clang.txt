
hello-world-clang.out: formato do arquivo elf64-x86-64


Desmontagem da seção .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x133>
  400248:	78 38                	js     400282 <_init-0x126>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Desmontagem da seção .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 03                	add    %al,(%rbx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 02                	add    %al,(%rdx)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 00                	add    %al,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Desmontagem da seção .gnu.hash:

0000000000400278 <.gnu.hash>:
  400278:	01 00                	add    %eax,(%rax)
  40027a:	00 00                	add    %al,(%rax)
  40027c:	01 00                	add    %eax,(%rax)
  40027e:	00 00                	add    %al,(%rax)
  400280:	01 00                	add    %eax,(%rax)
	...

Desmontagem da seção .dynsym:

0000000000400298 <.dynsym>:
	...
  4002b0:	0b 00                	or     (%rax),%eax
  4002b2:	00 00                	add    %al,(%rax)
  4002b4:	12 00                	adc    (%rax),%al
	...
  4002c6:	00 00                	add    %al,(%rax)
  4002c8:	12 00                	adc    (%rax),%al
  4002ca:	00 00                	add    %al,(%rax)
  4002cc:	12 00                	adc    (%rax),%al
	...
  4002de:	00 00                	add    %al,(%rax)
  4002e0:	30 00                	xor    %al,(%rax)
  4002e2:	00 00                	add    %al,(%rax)
  4002e4:	20 00                	and    %al,(%rax)
	...

Desmontagem da seção .dynstr:

00000000004002f8 <.dynstr>:
  4002f8:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  4002fc:	63 2e                	movslq (%rsi),%ebp
  4002fe:	73 6f                	jae    40036f <_init-0x39>
  400300:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
  400305:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  40030c:	6c                   	insb   (%dx),%es:(%rdi)
  40030d:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400314:	72 74                	jb     40038a <_init-0x1e>
  400316:	5f                   	pop    %rdi
  400317:	6d                   	insl   (%dx),%es:(%rdi)
  400318:	61                   	(bad)  
  400319:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  400320:	43 5f                	rex.XB pop %r15
  400322:	32 2e                	xor    (%rsi),%ch
  400324:	32 2e                	xor    (%rsi),%ch
  400326:	35 00 5f 5f 67       	xor    $0x675f5f00,%eax
  40032b:	6d                   	insl   (%dx),%es:(%rdi)
  40032c:	6f                   	outsl  %ds:(%rsi),(%dx)
  40032d:	6e                   	outsb  %ds:(%rsi),(%dx)
  40032e:	5f                   	pop    %rdi
  40032f:	73 74                	jae    4003a5 <_init-0x3>
  400331:	61                   	(bad)  
  400332:	72 74                	jb     4003a8 <_init>
  400334:	5f                   	pop    %rdi
  400335:	5f                   	pop    %rdi
	...

Desmontagem da seção .gnu.version:

0000000000400338 <.gnu.version>:
  400338:	00 00                	add    %al,(%rax)
  40033a:	02 00                	add    (%rax),%al
  40033c:	02 00                	add    (%rax),%al
	...

Desmontagem da seção .gnu.version_r:

0000000000400340 <.gnu.version_r>:
  400340:	01 00                	add    %eax,(%rax)
  400342:	01 00                	add    %eax,(%rax)
  400344:	01 00                	add    %eax,(%rax)
  400346:	00 00                	add    %al,(%rax)
  400348:	10 00                	adc    %al,(%rax)
  40034a:	00 00                	add    %al,(%rax)
  40034c:	00 00                	add    %al,(%rax)
  40034e:	00 00                	add    %al,(%rax)
  400350:	75 1a                	jne    40036c <_init-0x3c>
  400352:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400358:	24 00                	and    $0x0,%al
  40035a:	00 00                	add    %al,(%rax)
  40035c:	00 00                	add    %al,(%rax)
	...

Desmontagem da seção .rela.dyn:

0000000000400360 <.rela.dyn>:
  400360:	f0 0f 60 00          	lock punpcklbw (%rax),%mm0
  400364:	00 00                	add    %al,(%rax)
  400366:	00 00                	add    %al,(%rax)
  400368:	06                   	(bad)  
  400369:	00 00                	add    %al,(%rax)
  40036b:	00 02                	add    %al,(%rdx)
	...
  400375:	00 00                	add    %al,(%rax)
  400377:	00 f8                	add    %bh,%al
  400379:	0f 60 00             	punpcklbw (%rax),%mm0
  40037c:	00 00                	add    %al,(%rax)
  40037e:	00 00                	add    %al,(%rax)
  400380:	06                   	(bad)  
  400381:	00 00                	add    %al,(%rax)
  400383:	00 03                	add    %al,(%rbx)
	...

Desmontagem da seção .rela.plt:

0000000000400390 <.rela.plt>:
  400390:	18 10                	sbb    %dl,(%rax)
  400392:	60                   	(bad)  
  400393:	00 00                	add    %al,(%rax)
  400395:	00 00                	add    %al,(%rax)
  400397:	00 07                	add    %al,(%rdi)
  400399:	00 00                	add    %al,(%rax)
  40039b:	00 01                	add    %al,(%rcx)
	...

Desmontagem da seção .init:

00000000004003a8 <_init>:
  4003a8:	48 83 ec 08          	sub    $0x8,%rsp
  4003ac:	48 8b 05 45 0c 20 00 	mov    0x200c45(%rip),%rax        # 600ff8 <__gmon_start__>
  4003b3:	48 85 c0             	test   %rax,%rax
  4003b6:	74 02                	je     4003ba <_init+0x12>
  4003b8:	ff d0                	callq  *%rax
  4003ba:	48 83 c4 08          	add    $0x8,%rsp
  4003be:	c3                   	retq   

Desmontagem da seção .plt:

00000000004003c0 <.plt>:
  4003c0:	ff 35 42 0c 20 00    	pushq  0x200c42(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003c6:	ff 25 44 0c 20 00    	jmpq   *0x200c44(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003d0 <printf@plt>:
  4003d0:	ff 25 42 0c 20 00    	jmpq   *0x200c42(%rip)        # 601018 <printf@GLIBC_2.2.5>
  4003d6:	68 00 00 00 00       	pushq  $0x0
  4003db:	e9 e0 ff ff ff       	jmpq   4003c0 <.plt>

Desmontagem da seção .text:

00000000004003e0 <_start>:
  4003e0:	31 ed                	xor    %ebp,%ebp
  4003e2:	49 89 d1             	mov    %rdx,%r9
  4003e5:	5e                   	pop    %rsi
  4003e6:	48 89 e2             	mov    %rsp,%rdx
  4003e9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4003ed:	50                   	push   %rax
  4003ee:	54                   	push   %rsp
  4003ef:	49 c7 c0 70 05 40 00 	mov    $0x400570,%r8
  4003f6:	48 c7 c1 00 05 40 00 	mov    $0x400500,%rcx
  4003fd:	48 c7 c7 d0 04 40 00 	mov    $0x4004d0,%rdi
  400404:	ff 15 e6 0b 20 00    	callq  *0x200be6(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  40040a:	f4                   	hlt    
  40040b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400410 <_dl_relocate_static_pie>:
  400410:	f3 c3                	repz retq 
  400412:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400419:	00 00 00 
  40041c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400420 <deregister_tm_clones>:
  400420:	55                   	push   %rbp
  400421:	b8 30 10 60 00       	mov    $0x601030,%eax
  400426:	48 3d 30 10 60 00    	cmp    $0x601030,%rax
  40042c:	48 89 e5             	mov    %rsp,%rbp
  40042f:	74 17                	je     400448 <deregister_tm_clones+0x28>
  400431:	b8 00 00 00 00       	mov    $0x0,%eax
  400436:	48 85 c0             	test   %rax,%rax
  400439:	74 0d                	je     400448 <deregister_tm_clones+0x28>
  40043b:	5d                   	pop    %rbp
  40043c:	bf 30 10 60 00       	mov    $0x601030,%edi
  400441:	ff e0                	jmpq   *%rax
  400443:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400448:	5d                   	pop    %rbp
  400449:	c3                   	retq   
  40044a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400450 <register_tm_clones>:
  400450:	be 30 10 60 00       	mov    $0x601030,%esi
  400455:	55                   	push   %rbp
  400456:	48 81 ee 30 10 60 00 	sub    $0x601030,%rsi
  40045d:	48 89 e5             	mov    %rsp,%rbp
  400460:	48 c1 fe 03          	sar    $0x3,%rsi
  400464:	48 89 f0             	mov    %rsi,%rax
  400467:	48 c1 e8 3f          	shr    $0x3f,%rax
  40046b:	48 01 c6             	add    %rax,%rsi
  40046e:	48 d1 fe             	sar    %rsi
  400471:	74 15                	je     400488 <register_tm_clones+0x38>
  400473:	b8 00 00 00 00       	mov    $0x0,%eax
  400478:	48 85 c0             	test   %rax,%rax
  40047b:	74 0b                	je     400488 <register_tm_clones+0x38>
  40047d:	5d                   	pop    %rbp
  40047e:	bf 30 10 60 00       	mov    $0x601030,%edi
  400483:	ff e0                	jmpq   *%rax
  400485:	0f 1f 00             	nopl   (%rax)
  400488:	5d                   	pop    %rbp
  400489:	c3                   	retq   
  40048a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400490 <__do_global_dtors_aux>:
  400490:	80 3d 99 0b 20 00 00 	cmpb   $0x0,0x200b99(%rip)        # 601030 <__TMC_END__>
  400497:	75 17                	jne    4004b0 <__do_global_dtors_aux+0x20>
  400499:	55                   	push   %rbp
  40049a:	48 89 e5             	mov    %rsp,%rbp
  40049d:	e8 7e ff ff ff       	callq  400420 <deregister_tm_clones>
  4004a2:	c6 05 87 0b 20 00 01 	movb   $0x1,0x200b87(%rip)        # 601030 <__TMC_END__>
  4004a9:	5d                   	pop    %rbp
  4004aa:	c3                   	retq   
  4004ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4004b0:	f3 c3                	repz retq 
  4004b2:	0f 1f 40 00          	nopl   0x0(%rax)
  4004b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4004bd:	00 00 00 

00000000004004c0 <frame_dummy>:
  4004c0:	55                   	push   %rbp
  4004c1:	48 89 e5             	mov    %rsp,%rbp
  4004c4:	5d                   	pop    %rbp
  4004c5:	eb 89                	jmp    400450 <register_tm_clones>
  4004c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4004ce:	00 00 

00000000004004d0 <main>:
  4004d0:	55                   	push   %rbp
  4004d1:	48 89 e5             	mov    %rsp,%rbp
  4004d4:	48 83 ec 10          	sub    $0x10,%rsp
  4004d8:	48 bf 84 05 40 00 00 	movabs $0x400584,%rdi
  4004df:	00 00 00 
  4004e2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4004e9:	b0 00                	mov    $0x0,%al
  4004eb:	e8 e0 fe ff ff       	callq  4003d0 <printf@plt>
  4004f0:	31 c9                	xor    %ecx,%ecx
  4004f2:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4004f5:	89 c8                	mov    %ecx,%eax
  4004f7:	48 83 c4 10          	add    $0x10,%rsp
  4004fb:	5d                   	pop    %rbp
  4004fc:	c3                   	retq   
  4004fd:	0f 1f 00             	nopl   (%rax)

0000000000400500 <__libc_csu_init>:
  400500:	41 57                	push   %r15
  400502:	41 56                	push   %r14
  400504:	49 89 d7             	mov    %rdx,%r15
  400507:	41 55                	push   %r13
  400509:	41 54                	push   %r12
  40050b:	4c 8d 25 fe 08 20 00 	lea    0x2008fe(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400512:	55                   	push   %rbp
  400513:	48 8d 2d fe 08 20 00 	lea    0x2008fe(%rip),%rbp        # 600e18 <__init_array_end>
  40051a:	53                   	push   %rbx
  40051b:	41 89 fd             	mov    %edi,%r13d
  40051e:	49 89 f6             	mov    %rsi,%r14
  400521:	4c 29 e5             	sub    %r12,%rbp
  400524:	48 83 ec 08          	sub    $0x8,%rsp
  400528:	48 c1 fd 03          	sar    $0x3,%rbp
  40052c:	e8 77 fe ff ff       	callq  4003a8 <_init>
  400531:	48 85 ed             	test   %rbp,%rbp
  400534:	74 20                	je     400556 <__libc_csu_init+0x56>
  400536:	31 db                	xor    %ebx,%ebx
  400538:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40053f:	00 
  400540:	4c 89 fa             	mov    %r15,%rdx
  400543:	4c 89 f6             	mov    %r14,%rsi
  400546:	44 89 ef             	mov    %r13d,%edi
  400549:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40054d:	48 83 c3 01          	add    $0x1,%rbx
  400551:	48 39 dd             	cmp    %rbx,%rbp
  400554:	75 ea                	jne    400540 <__libc_csu_init+0x40>
  400556:	48 83 c4 08          	add    $0x8,%rsp
  40055a:	5b                   	pop    %rbx
  40055b:	5d                   	pop    %rbp
  40055c:	41 5c                	pop    %r12
  40055e:	41 5d                	pop    %r13
  400560:	41 5e                	pop    %r14
  400562:	41 5f                	pop    %r15
  400564:	c3                   	retq   
  400565:	90                   	nop
  400566:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40056d:	00 00 00 

0000000000400570 <__libc_csu_fini>:
  400570:	f3 c3                	repz retq 

Desmontagem da seção .fini:

0000000000400574 <_fini>:
  400574:	48 83 ec 08          	sub    $0x8,%rsp
  400578:	48 83 c4 08          	add    $0x8,%rsp
  40057c:	c3                   	retq   

Desmontagem da seção .rodata:

0000000000400580 <_IO_stdin_used>:
  400580:	01 00                	add    %eax,(%rax)
  400582:	02 00                	add    (%rax),%al
  400584:	48                   	rex.W
  400585:	65 6c                	gs insb (%dx),%es:(%rdi)
  400587:	6c                   	insb   (%dx),%es:(%rdi)
  400588:	6f                   	outsl  %ds:(%rsi),(%dx)
  400589:	2c 20                	sub    $0x20,%al
  40058b:	77 6f                	ja     4005fc <__GNU_EH_FRAME_HDR+0x68>
  40058d:	72 6c                	jb     4005fb <__GNU_EH_FRAME_HDR+0x67>
  40058f:	64 21 0a             	and    %ecx,%fs:(%rdx)
	...

Desmontagem da seção .eh_frame_hdr:

0000000000400594 <__GNU_EH_FRAME_HDR>:
  400594:	01 1b                	add    %ebx,(%rbx)
  400596:	03 3b                	add    (%rbx),%edi
  400598:	38 00                	cmp    %al,(%rax)
  40059a:	00 00                	add    %al,(%rax)
  40059c:	06                   	(bad)  
  40059d:	00 00                	add    %al,(%rax)
  40059f:	00 2c fe             	add    %ch,(%rsi,%rdi,8)
  4005a2:	ff                   	(bad)  
  4005a3:	ff 94 00 00 00 4c fe 	callq  *-0x1b40000(%rax,%rax,1)
  4005aa:	ff                   	(bad)  
  4005ab:	ff 54 00 00          	callq  *0x0(%rax,%rax,1)
  4005af:	00 7c fe ff          	add    %bh,-0x1(%rsi,%rdi,8)
  4005b3:	ff 80 00 00 00 3c    	incl   0x3c000000(%rax)
  4005b9:	ff                   	(bad)  
  4005ba:	ff                   	(bad)  
  4005bb:	ff                   	(bad)  
  4005bc:	bc 00 00 00 6c       	mov    $0x6c000000,%esp
  4005c1:	ff                   	(bad)  
  4005c2:	ff                   	(bad)  
  4005c3:	ff                   	(bad)  
  4005c4:	dc 00                	faddl  (%rax)
  4005c6:	00 00                	add    %al,(%rax)
  4005c8:	dc ff                	fdivr  %st,%st(7)
  4005ca:	ff                   	(bad)  
  4005cb:	ff 24 01             	jmpq   *(%rcx,%rax,1)
	...

Desmontagem da seção .eh_frame:

00000000004005d0 <__FRAME_END__-0xfc>:
  4005d0:	14 00                	adc    $0x0,%al
  4005d2:	00 00                	add    %al,(%rax)
  4005d4:	00 00                	add    %al,(%rax)
  4005d6:	00 00                	add    %al,(%rax)
  4005d8:	01 7a 52             	add    %edi,0x52(%rdx)
  4005db:	00 01                	add    %al,(%rcx)
  4005dd:	78 10                	js     4005ef <__GNU_EH_FRAME_HDR+0x5b>
  4005df:	01 1b                	add    %ebx,(%rbx)
  4005e1:	0c 07                	or     $0x7,%al
  4005e3:	08 90 01 07 10 10    	or     %dl,0x10100701(%rax)
  4005e9:	00 00                	add    %al,(%rax)
  4005eb:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4005ee:	00 00                	add    %al,(%rax)
  4005f0:	f0 fd                	lock std 
  4005f2:	ff                   	(bad)  
  4005f3:	ff 2b                	ljmp   *(%rbx)
  4005f5:	00 00                	add    %al,(%rax)
  4005f7:	00 00                	add    %al,(%rax)
  4005f9:	00 00                	add    %al,(%rax)
  4005fb:	00 14 00             	add    %dl,(%rax,%rax,1)
  4005fe:	00 00                	add    %al,(%rax)
  400600:	00 00                	add    %al,(%rax)
  400602:	00 00                	add    %al,(%rax)
  400604:	01 7a 52             	add    %edi,0x52(%rdx)
  400607:	00 01                	add    %al,(%rcx)
  400609:	78 10                	js     40061b <__GNU_EH_FRAME_HDR+0x87>
  40060b:	01 1b                	add    %ebx,(%rbx)
  40060d:	0c 07                	or     $0x7,%al
  40060f:	08 90 01 00 00 10    	or     %dl,0x10000001(%rax)
  400615:	00 00                	add    %al,(%rax)
  400617:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40061a:	00 00                	add    %al,(%rax)
  40061c:	f4                   	hlt    
  40061d:	fd                   	std    
  40061e:	ff                   	(bad)  
  40061f:	ff 02                	incl   (%rdx)
  400621:	00 00                	add    %al,(%rax)
  400623:	00 00                	add    %al,(%rax)
  400625:	00 00                	add    %al,(%rax)
  400627:	00 24 00             	add    %ah,(%rax,%rax,1)
  40062a:	00 00                	add    %al,(%rax)
  40062c:	30 00                	xor    %al,(%rax)
  40062e:	00 00                	add    %al,(%rax)
  400630:	90                   	nop
  400631:	fd                   	std    
  400632:	ff                   	(bad)  
  400633:	ff 20                	jmpq   *(%rax)
  400635:	00 00                	add    %al,(%rax)
  400637:	00 00                	add    %al,(%rax)
  400639:	0e                   	(bad)  
  40063a:	10 46 0e             	adc    %al,0xe(%rsi)
  40063d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400640:	0b 77 08             	or     0x8(%rdi),%esi
  400643:	80 00 3f             	addb   $0x3f,(%rax)
  400646:	1a 3b                	sbb    (%rbx),%bh
  400648:	2a 33                	sub    (%rbx),%dh
  40064a:	24 22                	and    $0x22,%al
  40064c:	00 00                	add    %al,(%rax)
  40064e:	00 00                	add    %al,(%rax)
  400650:	1c 00                	sbb    $0x0,%al
  400652:	00 00                	add    %al,(%rax)
  400654:	58                   	pop    %rax
  400655:	00 00                	add    %al,(%rax)
  400657:	00 78 fe             	add    %bh,-0x2(%rax)
  40065a:	ff                   	(bad)  
  40065b:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 400661 <__GNU_EH_FRAME_HDR+0xcd>
  400661:	41 0e                	rex.B (bad) 
  400663:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400669:	00 00                	add    %al,(%rax)
  40066b:	00 00                	add    %al,(%rax)
  40066d:	00 00                	add    %al,(%rax)
  40066f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  400673:	00 78 00             	add    %bh,0x0(%rax)
  400676:	00 00                	add    %al,(%rax)
  400678:	88 fe                	mov    %bh,%dh
  40067a:	ff                   	(bad)  
  40067b:	ff 65 00             	jmpq   *0x0(%rbp)
  40067e:	00 00                	add    %al,(%rax)
  400680:	00 42 0e             	add    %al,0xe(%rdx)
  400683:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  400689:	8e 03                	mov    (%rbx),%es
  40068b:	45 0e                	rex.RB (bad) 
  40068d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  400693:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff867014e1 <_end+0xffffffff861004a9>
  400699:	06                   	(bad)  
  40069a:	48 0e                	rex.W (bad) 
  40069c:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  4006a2:	72 0e                	jb     4006b2 <__GNU_EH_FRAME_HDR+0x11e>
  4006a4:	38 41 0e             	cmp    %al,0xe(%rcx)
  4006a7:	30 41 0e             	xor    %al,0xe(%rcx)
  4006aa:	28 42 0e             	sub    %al,0xe(%rdx)
  4006ad:	20 42 0e             	and    %al,0xe(%rdx)
  4006b0:	18 42 0e             	sbb    %al,0xe(%rdx)
  4006b3:	10 42 0e             	adc    %al,0xe(%rdx)
  4006b6:	08 00                	or     %al,(%rax)
  4006b8:	10 00                	adc    %al,(%rax)
  4006ba:	00 00                	add    %al,(%rax)
  4006bc:	c0 00 00             	rolb   $0x0,(%rax)
  4006bf:	00 b0 fe ff ff 02    	add    %dh,0x2fffffe(%rax)
  4006c5:	00 00                	add    %al,(%rax)
  4006c7:	00 00                	add    %al,(%rax)
  4006c9:	00 00                	add    %al,(%rax)
	...

00000000004006cc <__FRAME_END__>:
  4006cc:	00 00                	add    %al,(%rax)
	...

Desmontagem da seção .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	c0 04 40 00          	rolb   $0x0,(%rax,%rax,2)
  600e14:	00 00                	add    %al,(%rax)
	...

Desmontagem da seção .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	90                   	nop
  600e19:	04 40                	add    $0x40,%al
  600e1b:	00 00                	add    %al,(%rax)
  600e1d:	00 00                	add    %al,(%rax)
	...

Desmontagem da seção .dynamic:

0000000000600e20 <_DYNAMIC>:
  600e20:	01 00                	add    %eax,(%rax)
  600e22:	00 00                	add    %al,(%rax)
  600e24:	00 00                	add    %al,(%rax)
  600e26:	00 00                	add    %al,(%rax)
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	0c 00                	or     $0x0,%al
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	a8 03                	test   $0x3,%al
  600e3a:	40 00 00             	add    %al,(%rax)
  600e3d:	00 00                	add    %al,(%rax)
  600e3f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e45 <_DYNAMIC+0x25>
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 74 05 40          	add    %dh,0x40(%rbp,%rax,1)
  600e4b:	00 00                	add    %al,(%rax)
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 19                	add    %bl,(%rcx)
  600e51:	00 00                	add    %al,(%rax)
  600e53:	00 00                	add    %al,(%rax)
  600e55:	00 00                	add    %al,(%rax)
  600e57:	00 10                	add    %dl,(%rax)
  600e59:	0e                   	(bad)  
  600e5a:	60                   	(bad)  
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 1b                	add    %bl,(%rbx)
  600e61:	00 00                	add    %al,(%rax)
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 08                	add    %cl,(%rax)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 1a                	add    %bl,(%rdx)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 18                	add    %bl,(%rax)
  600e79:	0e                   	(bad)  
  600e7a:	60                   	(bad)  
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e82:	00 00                	add    %al,(%rax)
  600e84:	00 00                	add    %al,(%rax)
  600e86:	00 00                	add    %al,(%rax)
  600e88:	08 00                	or     %al,(%rax)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	f5                   	cmc    
  600e91:	fe                   	(bad)  
  600e92:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 78 02             	add    %bh,0x2(%rax)
  600e9a:	40 00 00             	add    %al,(%rax)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ea5 <_DYNAMIC+0x85>
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 f8                	add    %bh,%al
  600ea9:	02 40 00             	add    0x0(%rax),%al
  600eac:	00 00                	add    %al,(%rax)
  600eae:	00 00                	add    %al,(%rax)
  600eb0:	06                   	(bad)  
  600eb1:	00 00                	add    %al,(%rax)
  600eb3:	00 00                	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 0a                	add    %cl,(%rdx)
  600ec1:	00 00                	add    %al,(%rax)
  600ec3:	00 00                	add    %al,(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 3f                	add    %bh,(%rdi)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 0b                	add    %cl,(%rbx)
  600ed1:	00 00                	add    %al,(%rax)
  600ed3:	00 00                	add    %al,(%rax)
  600ed5:	00 00                	add    %al,(%rax)
  600ed7:	00 18                	add    %bl,(%rax)
  600ed9:	00 00                	add    %al,(%rax)
  600edb:	00 00                	add    %al,(%rax)
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600ee5 <_DYNAMIC+0xc5>
	...
  600eed:	00 00                	add    %al,(%rax)
  600eef:	00 03                	add    %al,(%rbx)
	...
  600ef9:	10 60 00             	adc    %ah,0x0(%rax)
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	02 00                	add    (%rax),%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	18 00                	sbb    %al,(%rax)
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	14 00                	adc    $0x0,%al
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	07                   	(bad)  
  600f19:	00 00                	add    %al,(%rax)
  600f1b:	00 00                	add    %al,(%rax)
  600f1d:	00 00                	add    %al,(%rax)
  600f1f:	00 17                	add    %dl,(%rdi)
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 90 03 40 00 00    	add    %dl,0x4003(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 07                	add    %al,(%rdi)
  600f31:	00 00                	add    %al,(%rax)
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 60 03             	add    %ah,0x3(%rax)
  600f3a:	40 00 00             	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 08                	add    %cl,(%rax)
  600f41:	00 00                	add    %al,(%rax)
  600f43:	00 00                	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 30                	add    %dh,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 09                	add    %cl,(%rcx)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 18                	add    %bl,(%rax)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 fe                	add    %bh,%dh
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 40 03             	add    %al,0x3(%rax)
  600f6a:	40 00 00             	add    %al,(%rax)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 ff                	add    %bh,%bh
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 01                	add    %al,(%rcx)
  600f79:	00 00                	add    %al,(%rax)
  600f7b:	00 00                	add    %al,(%rax)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 f0                	add    %dh,%al
  600f81:	ff                   	(bad)  
  600f82:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 38                	add    %bh,(%rax)
  600f89:	03 40 00             	add    0x0(%rax),%eax
	...

Desmontagem da seção .got:

0000000000600ff0 <.got>:
	...

Desmontagem da seção .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	20 0e                	and    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 d6                	add    %dl,%dh
  601019:	03 40 00             	add    0x0(%rax),%eax
  60101c:	00 00                	add    %al,(%rax)
	...

Desmontagem da seção .data:

0000000000601020 <__data_start>:
	...

0000000000601028 <__dso_handle>:
	...

Desmontagem da seção .bss:

0000000000601030 <__bss_start>:
	...

Desmontagem da seção .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400330>
   a:	74 75                	je     81 <_init-0x400327>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 35 2e 30 2d 33    	cs xor $0x332d302e,%eax
  14:	75 62                	jne    78 <_init-0x400330>
  16:	75 6e                	jne    86 <_init-0x400322>
  18:	74 75                	je     8f <_init-0x400319>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  22:	20 37                	and    %dh,(%rdi)
  24:	2e 35 2e 30 00 63    	cs xor $0x6300302e,%eax
  2a:	6c                   	insb   (%dx),%es:(%rdi)
  2b:	61                   	(bad)  
  2c:	6e                   	outsb  %ds:(%rsi),(%dx)
  2d:	67 20 76 65          	and    %dh,0x65(%esi)
  31:	72 73                	jb     a6 <_init-0x400302>
  33:	69 6f 6e 20 36 2e 30 	imul   $0x302e3620,0x6e(%rdi),%ebp
  3a:	2e 31 2d 73 76 6e 33 	xor    %ebp,%cs:0x336e7673(%rip)        # 336e76b4 <_end+0x330e667c>
  41:	33 34 37             	xor    (%rdi,%rsi,1),%esi
  44:	37                   	(bad)  
  45:	36 2d 31 7e 65 78    	ss sub $0x78657e31,%eax
  4b:	70 31                	jo     7e <_init-0x40032a>
  4d:	7e 32                	jle    81 <_init-0x400327>
  4f:	30 31                	xor    %dh,(%rcx)
  51:	39 30                	cmp    %esi,(%rax)
  53:	33 30                	xor    (%rax),%esi
  55:	39 30                	cmp    %esi,(%rax)
  57:	34 32                	xor    $0x32,%al
  59:	37                   	(bad)  
  5a:	33 30                	xor    (%rax),%esi
  5c:	2e 31 32             	xor    %esi,%cs:(%rdx)
  5f:	33 20                	xor    (%rax),%esp
  61:	28 62 72             	sub    %ah,0x72(%rdx)
  64:	61                   	(bad)  
  65:	6e                   	outsb  %ds:(%rsi),(%dx)
  66:	63 68 65             	movslq 0x65(%rax),%ebp
  69:	73 2f                	jae    9a <_init-0x40030e>
  6b:	72 65                	jb     d2 <_init-0x4002d6>
  6d:	6c                   	insb   (%dx),%es:(%rdi)
  6e:	65 61                	gs (bad) 
  70:	73 65                	jae    d7 <_init-0x4002d1>
  72:	5f                   	pop    %rdi
  73:	36 30 29             	xor    %ch,%ss:(%rcx)
	...
